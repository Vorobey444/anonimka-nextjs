'use client'

import { useState } from 'react'

export default function TestPage() {
  const [testResults, setTestResults] = useState<string[]>([])
  const [isLoading, setIsLoading] = useState(false)

  const addLog = (message: string) => {
    console.log(message)
    setTestResults(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`])
  }

  const testEmailAPI = async () => {
    setIsLoading(true)
    setTestResults([])
    
    addLog('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Email API...')
    
    const testData = {
      senderEmail: 'test@example.com',
      subject: '–¢–µ—Å—Ç API Anonimka.Online',
      message: `–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤ ${new Date().toLocaleString('ru-RU')}

–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç email API —Å–∏—Å—Ç–µ–º—ã Anonimka.Online.

–°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:
- Next.js API Routes  
- Nodemailer —Å Yandex SMTP
- –¢–µ –∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á—Ç–æ –∏ whish.online
- Vercel Serverless Functions

–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: wish.online@yandex.kz
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: vorobey469@yandex.ru`
    }

    try {
      addLog('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å –Ω–∞ /api/send-email...')
      
      const response = await fetch('/api/send-email', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(testData),
      })

      addLog(`üìä HTTP Status: ${response.status} ${response.statusText}`)

      const result = await response.json()
      
      if (result.success) {
        addLog('‚úÖ –£–°–ü–ï–•! Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!')
        addLog(`üìß MessageId: ${result.messageId}`)
        addLog(`üíå –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${result.message}`)
        addLog('üì¨ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É vorobey469@yandex.ru')
      } else {
        addLog(`‚ùå –û–®–ò–ë–ö–ê: ${result.error}`)
        if (result.details) {
          addLog(`üîç –î–µ—Ç–∞–ª–∏: ${JSON.stringify(result.details, null, 2)}`)
        }
      }
      
    } catch (error) {
      addLog(`‚ùå –°–ï–¢–ï–í–ê–Ø –û–®–ò–ë–ö–ê: ${error instanceof Error ? error.message : 'Unknown error'}`)
    } finally {
      setIsLoading(false)
      addLog('üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ')
    }
  }

  const clearLogs = () => {
    setTestResults([])
  }

  return (
    <main className="min-h-screen p-4 md:p-8">
      <div className="max-w-4xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-4xl md:text-5xl font-bold neon-text mb-4">
            üß™ EMAIL API TESTER
          </h1>
          <p className="text-lg opacity-80">
            –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ email —Å–∏—Å—Ç–µ–º—ã Anonimka.Online
          </p>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ */}
        <div className="neon-card mb-8">
          <h2 className="text-xl font-bold mb-4 neon-text">üìã –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
          <div className="grid md:grid-cols-2 gap-4 text-sm">
            <div>
              <p><strong>API Endpoint:</strong> /api/send-email</p>
              <p><strong>Method:</strong> POST</p>
              <p><strong>Framework:</strong> Next.js 14</p>
              <p><strong>Runtime:</strong> Node.js Serverless</p>
            </div>
            <div>
              <p><strong>SMTP Server:</strong> smtp.yandex.ru:587</p>
              <p><strong>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</strong> wish.online@yandex.kz</p>
              <p><strong>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</strong> vorobey469@yandex.ru</p>
              <p><strong>Library:</strong> nodemailer</p>
            </div>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex gap-4 mb-8">
          <button
            onClick={testEmailAPI}
            disabled={isLoading}
            className="neon-button disabled:opacity-50"
          >
            {isLoading ? (
              <>
                <span className="loading mr-2"></span>
                –¢–µ—Å—Ç–∏—Ä—É–µ–º...
              </>
            ) : (
              'üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç'
            )}
          </button>
          
          <button
            onClick={clearLogs}
            className="neon-button"
            style={{ borderColor: '#ff006e', color: '#ff006e' }}
          >
            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏
          </button>
        </div>

        {/* –õ–æ–≥–∏ */}
        <div className="neon-card">
          <h3 className="text-lg font-bold mb-4 neon-text">üìä –õ–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è</h3>
          
          <div className="bg-black/50 p-4 rounded-lg border border-gray-600 font-mono text-sm max-h-96 overflow-y-auto">
            {testResults.length === 0 ? (
              <p className="opacity-60">–ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç" –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...</p>
            ) : (
              testResults.map((log, index) => (
                <div key={index} className="mb-1">
                  {log}
                </div>
              ))
            )}
          </div>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
        <div className="text-center mt-8">
          <a href="/" className="neon-button">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </a>
        </div>
      </div>
    </main>
  )
}