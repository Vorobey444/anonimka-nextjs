// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API
const testEmailAPI = async () => {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Email API...');
  
  const testData = {
    senderEmail: 'test@example.com',
    subject: '–¢–µ—Å—Ç API Anonimka.Online',
    message: `–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ –≤ ${new Date().toLocaleString('ru-RU')}

–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç email API —Å–∏—Å—Ç–µ–º—ã Anonimka.Online.

–°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç:
- Next.js API Routes  
- Nodemailer —Å Yandex SMTP
- –¢–µ –∂–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á—Ç–æ –∏ whish.online
- Vercel Serverless Functions

–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: wish.online@yandex.kz
–ü–æ–ª—É—á–∞—Ç–µ–ª—å: vorobey469@yandex.ru`
  };

  try {
    const response = await fetch('/api/send-email', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testData),
    });

    const result = await response.json();
    
    if (result.success) {
      console.log('‚úÖ –£–°–ü–ï–•! Email API —Ä–∞–±–æ—Ç–∞–µ—Ç:', result);
      console.log('üìß MessageId:', result.messageId);
      console.log('üíå –°–æ–æ–±—â–µ–Ω–∏–µ:', result.message);
    } else {
      console.error('‚ùå –û–®–ò–ë–ö–ê API:', result);
    }
    
    return result;
    
  } catch (error) {
    console.error('‚ùå –°–ï–¢–ï–í–ê–Ø –û–®–ò–ë–ö–ê:', error);
    return { success: false, error: error.message };
  }
};

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
console.log('üöÄ Anonimka.Online Email API Tester');
console.log('===================================');
testEmailAPI();